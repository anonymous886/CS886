Feed to any adversary, using a valid MNIST loader. Note : Only transform to tensor and reshape to 784 before inputting MNIST.

class Net(nn.Module):
    def __init__(self):
        super(Net, self).__init__()
        self.fc1 = nn.Linear(784, 500) 
        self.trans = nn.Sigmoid()
        self.mid = nn.Linear(500,500)
        self.another = nn.Sigmoid()
        self.another2 = nn.Linear(500,500)
        self.trans2 = nn.Sigmoid()
        self.fc2 = nn.Linear(500, 10)  
    
    def forward(self, x):
        out = self.fc1(x)
        #out = self.trans(out)
        out = F.relu(out)
        out = self.mid(out)
        #out = self.another(out)
        out = F.relu(out)
        out = self.another2(out)
        #out = self.trans2(out)
        out = F.relu(out)
        out = self.fc2(out)
        return F.log_softmax(out, dim=1)

( Commented out layers were used to test sigmoid...not as good as ReLU )
